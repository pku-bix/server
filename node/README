# 环境配置


## 安装第三方软件

* Redis-server，用于存储会话，服务器重启后将不影响会话状态，用于生产环境。
* MongoDB，用于存储用户数据、应用数据。
* ejabberd，用户XMPP协议的聊天服务与用户注册与验证。
* npm, grunt-cli, 用于构建自动化


## 自动构建

```bash
# 从Git仓库克隆
git clone git_url

# 自动解决依赖
npm install
```


## 启动服务器

### 启动ejabberd

ejabberd安装与配置参见：[CentOS架设XMPP服务器](http://harttle.github.io/development/centos_xmpp.html)

### 启动Node

1. 数据库

  ```bash
  # 启动MongoDB
  mongod
  # 生产环境还需启动redis
  redis-server
  ```

2. 启动Node

  ```bash
  # 开发环境
  grunt
  # 生产环境
  grunt server
  ```

# Web API

为了更好的可维护性与通用性（同时提供给客户端更大的灵活性），Web API 设计应尽量满足 restful 原则。外键根据需要进行population，暂时借此减少客户端请求次数。

```bash
# 服务器IP
base=http://121.40.72.197/api

# 获取可用充电桩位置：包括超级充电站、目的地充电站、分享的家庭充电桩
curl $base/chargers

# 获取充电桩详细信息
curl $base/charger/54455a5e24a180b42b43731a

# 获取用户详细信息
curl $base/user/testuser1

# 更新或创建用户信息，可选字段有：nickname, desc, wechat_id, phone, share_charger
curl -F "nickname=harttle" -F "wechat_id=hehe" -F "avatar=@./avatar.png" $base/user/testuser1

# 访问用户头像
curl $base/avatar/testuser1.png

# 分享充电桩
# 经纬度必选。所有字段均可用，参见 GET /charger/<id> 返回的字段
curl $base/charger -F 'username=testuser1' -F 'longitude=0' -F 'latitude=222'
```


# 未实现 API

```bash
# 发送动态，以author标识当前用户。
curl -F "author=testuser1" -F "text=example_text" -F "img0=@./a.png" $base/posts
# 获取最近N条动态
curl $base/posts?limit=<N>
# 获取id在<M>以前的<N>条（即更旧的）
curl $base/posts?limit=<N>&before=<M>
```

